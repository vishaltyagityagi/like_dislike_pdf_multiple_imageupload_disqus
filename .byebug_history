c
ENV['BUSINESS_EMAILID']
{ENV['BUSINESS_EMAILID']
c
plan.id.to_f
plan
params
c
params[:product]
u = Product.new(params[:product])
params
c
 @product.save!
@product = Product.new(product_params)
params
c
params[:product][:avatar]
params
@product = Product.new(product_params)
c
 @product = Product.new(product_params)
continue
@product.save!
@product = Product.new(avatar: "params[:product][:avatar]")
@product = Product.new(avatar: params[:product][:avatar])
@product = Product.new(params[:product][:avatar])
@product = Product.new(product_params)
params[:product][:avatar]
params[:product]
params
@product = Product.new(product_params)
continue
@product = Product.new(product_params)
continue
params.require(:product).permit(:name, :avatar,  :desc, :address, :user_id)
params[:product][:avatar]
params[:product]
params
avarat
params[:avatar]
params[avatar]
    end
      params.require(:product).permit(:name, :avatar,  :desc, :address, :user_id)
def product_params
    end
      params.require(:product).permit(:name, :desc, :address, :user_id, :avatar)
def product_params
params
continue
puts "aaaa"
params
continue
email.blank?
self.email = email
self
email.nil?
params
continue
@product.save!
@product = Product.new(product_params)
params
continue
desc = (self.desc.present? ? self.desc : "")
name = (self.name.present? ? self.name : "")
 name = (self.name.present? ? self.name : "")
continue
 Product.add_field( params[:product][:name], params[:product][:desc])
 params[:product][:name]
 params[:product][:desc]
Product.add_field( params[:product][:name], params[:product][:desc]).create(product_params)
Product.add_field( params[:product][:name], params[:product][:desc]).new(product_params)
continue
self.last.address
self.last
self.desc
self.name
self.address
self
self.address = name+" "+desc
name+" "+desc
name+""+desc
name"+"desc
name""+""desc
name+desc
name''+''desc
desc
name
params
continue
params[:product][:name]
params[:name]
params
continue
pdf = WickedPdf.new.pdf_from_string(render_to_string('products/index.html.erb', layout: false))
   23:     )
   22:     render_to_string('products/index.html.erb', layout: false)
pdf = WickedPdf.new.pdf_from_string(
continue
n
like.destroy
like.like==false
like = Like.find_or_initialize_by(:likeable_type=>@product.class.name.constantize,:user_id=>current_user.id)
@product = Product.find(params[:likeable_id])
params
continue
params
continue
params
like = Like.find_or_initialize_by(:likeable_type=>@product.class.name.constantize,:user_id=>current_user.id)
continue
Product.where(id: params[:likeable_id], user_id: current_user.id)
Product.where(id: params[:likeable_id], user_id:: current_user.id)
Product
Product.where(id: params[:likeable_id] user_id: current_user.id)
params
continue
Like
current_user.like
current_user
current_user.like
current_user.likes
params
continue
@product.user_id.to_i == current_user.id
@product = Product.find(params[:likeable_id]) rescue ""
@product
params
 @product = Product.find(params[:likeable_id]) rescue ""
params
continue
 Like.where(like: true).count
@product.likes.present? && @product.likes == current_user.id
continue
@product.likes.present? && @product.likes == current_user.id
continue
@dislike =@product.likes.destroy_all
=@product.likes.destroy_all
@product.user_id.to_i == current_user.id
@product = Product.find(params[:likeable_id]) rescue ""
continue
@like.save
@like = Like.new(likeable_id: @product.id, likeable_type: @product.class.name.constantize, user_id: current_user.id, like: true)
@product.user_id.to_i == current_user.id
@product = Product.find(params[:likeable_id]) rescue ""
@product.user_id.to_i == current_user.id
current_user.id.to_s
current_user.id
current_user
@product.where(user_id: current_user.id)
@product.find(user_id: current_user.id)
@product.find()
@product.find(current_user.id)
@product.user_id
@product.user_id.type
current_user.id
str(current_user.id)
@product.user_id
@product.user_id.name
@product.user_id.class.name
@product.user_id.class
current_user.id
@product.user_id
@product.user_id == current_user.id
@product = Product.find(params[:likeable_id])
continue
Like.destroy_all
current_user.products
current_user
continue
params
continue
@product = Product.find(params[:likeable_id])
@product.like
@product = Product.find(params[:likeable_id])
params
@like = Like.new(likeable_id: @product.id, likeable_type: @product.class.name.constantize, user_id: current_user.id)
@product = Product.find(params[:likeable_id])
continue
a.constantize
a = @product.class.name
@product.class.name
@like = Like.new(likeable_id: @product.id, likeable_type: @product.class.name.constantize)
@product.class.name.constantize
@product.class.name
@product.class
@product.class.instantize
@product.class.capitalize
@product.class
@product.name
@product
@product.class.name.constantize.name
@product.class.name.constantize
@type
@type = puts [@product.class.name]
@type = puts @product.class.name
like = Like.new(likeable_id: @product.id, likeable_type: @type)
@type = puts @product.class.name
@product = Product.find(params[:likeable_id])
puts @product.class.name
@product.class.name
@product.class
@product.id
@product = Product.find(params[:likeable_id])
Product.find(params[:likeable_id])
params[:likeable_id]
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
@product.class
@product
params
